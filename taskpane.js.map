{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = (typeof document !== 'undefined' && document.baseURI) || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    // document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"run\").onclick = run;\n  }\n});\n\nexport async function run() {\n  try {\n    await Word.run(async (context) => {\n      // Load the whole document body text\n      const body = context.document.body;\n      body.load(\"text\");\n      await context.sync();\n      const text = body.text || \"\";\n\n  // Regex to match patterns like:\n  // \"Lee v The Minister of Foreign Affairs [2003]\" or \"Mills v Harris (1975)\"\n  // - Party names: start with upper-case letter, allow words and common punctuation\n  // - 'v' or 'v.' or 'versus' variants\n  // - year in square brackets or parentheses [YYYY] or (YYYY)\n  // add the 'i' flag so the regex is case-insensitive\n  const citationRegex = /([A-Z][A-Za-z0-9'’\\.\\-,&() ]{1,160}?)\\s+v(?:\\.|ersus)?\\s+([A-Z][A-Za-z0-9'’\\.\\-,&() ]{1,160}?)\\s*[\\[\\(]([0-9]{4})[\\]\\)]/gi;\n\n      const matches = [];\n      let m;\n      while ((m = citationRegex.exec(text)) !== null) {\n        matches.push({\n          fullMatch: m[0],\n          claimant: m[1].trim(),\n          respondent: m[2].trim(),\n          year: m[3],\n          index: m.index\n        });\n        // Avoid infinite loops for zero-length matches (not expected here)\n        if (citationRegex.lastIndex === m.index) citationRegex.lastIndex++;\n      }\n\n      // For each match, find the exact occurrence(s) in the document and\n      // colour the text before the date (i.e., the parties and 'v') red.\n      // We do this by searching for the full match, then searching within\n      // that found range for the pre-date substring and applying formatting\n      // to that sub-range. This avoids changing other identical text elsewhere.\n      for (const mm of matches) {\n        try {\n          // Derive the substring that precedes the date/parenthesis/bracket\n          const preDate = mm.fullMatch.replace(/\\s*[\\[\\(][0-9]{4}[\\]\\)]\\s*$/u, \"\");\n\n          if (!preDate) continue;\n\n          // Search for the full match first (literal search). This returns RangeCollection\n          // use case-insensitive search so matches are found regardless of capitalization\n          const fullRanges = body.search(mm.fullMatch, {matchCase: false, matchWholeWord: false});\n          fullRanges.load(\"items\");\n          await context.sync();\n\n          // For each found full match, search within it for the preDate substring\n          // and apply font colour to those sub-ranges only.\n          for (const r of fullRanges.items) {\n            // search the pre-date substring case-insensitively as well\n            const subRanges = r.search(preDate, {matchCase: false, matchWholeWord: false});\n            // Load the font properties for each sub-range so we can inspect italic\n            subRanges.load(\"items/font\");\n            await context.sync();\n\n            for (const sr of subRanges.items) {\n              try {\n                // If the sub-range is not italicised, set it to italic\n                if (!sr.font.italic) {\n                  sr.font.italic = true;\n                }\n                sr.font.color = \"red\";\n              } catch (e) {\n                // If setting properties fails for some reason, continue with others\n                console.error(\"Failed to set color/italic for range:\", e);\n              }\n            }\n          }\n          // sync once per match batch to commit font changes\n          await context.sync();\n        } catch (innerErr) {\n          // Non-fatal per-match errors shouldn't stop the process\n          console.error(\"Error processing match:\", mm, innerErr);\n        }\n      }\n\n          // --- New: match Acts like \"The Interpretation Act (1971)\" ---\n          // Match patterns where the name ends with the word 'Act' followed by a year\n          // in parentheses or square brackets. We'll colour the pre-date part blue.\n          const actsRegex = /([A-Z][A-Za-z0-9'’\\.\\-,&() ]{1,200}?\\bAct)\\s*[\\[\\(]([0-9]{4})[\\]\\)]/gi;\n          const actsMatches = [];\n          while ((m = actsRegex.exec(text)) !== null) {\n            actsMatches.push({\n              fullMatch: m[0],\n              preDate: m[1].trim(),\n              year: m[2],\n              index: m.index\n            });\n            if (actsRegex.lastIndex === m.index) actsRegex.lastIndex++;\n          }\n\n          for (const am of actsMatches) {\n            try {\n              // Search for the full match in the document (case-insensitive)\n              const fullRanges = body.search(am.fullMatch, {matchCase: false, matchWholeWord: false});\n              fullRanges.load(\"items\");\n              await context.sync();\n\n              for (const r of fullRanges.items) {\n                const subRanges = r.search(am.preDate, {matchCase: false, matchWholeWord: false});\n                // Load the font properties for each sub-range so we can inspect italic\n                subRanges.load(\"items/font\");\n                await context.sync();\n\n                for (const sr of subRanges.items) {\n                  try {\n                    // If the sub-range is not italicised, set it to italic\n                    if (!sr.font.italic) {\n                      sr.font.italic = true;\n                    }\n                    sr.font.color = \"blue\";\n                  } catch (e) {\n                    console.error(\"Failed to set color/italic for act range:\", e);\n                  }\n                }\n              }\n              await context.sync();\n            } catch (e) {\n              console.error(\"Error processing act match:\", am, e);\n            }\n          }\n\n      // Render results: look for an element with id=\"results\" in the taskpane\n      const outEl = document.getElementById(\"results\");\n      if (outEl) {\n        if (matches.length === 0) {\n          outEl.textContent = \"No matches found.\";\n        } else {\n          // Build a simple HTML list of matches\n          outEl.innerHTML = matches.map((x, i) =>\n            `<div class=\"match\"><strong>#${i + 1}</strong>: ${escapeHtml(x.fullMatch)}<div class=\"meta\">Claimant: ${escapeHtml(x.claimant)} | Respondent: ${escapeHtml(x.respondent)} | Year: ${x.year}</div></div>`\n          ).join(\"\");\n        }\n      } else {\n        // If no results element is present, log to console\n        console.log(\"Citation matches:\", matches);\n      }\n    });\n  } catch (err) {\n    console.error(\"Error searching document:\", err);\n    const outEl = document.getElementById(\"results\");\n    if (outEl) outEl.textContent = `Error: ${err.message}`;\n  }\n\n  // Helper: escape HTML for safe display\n  function escapeHtml(str) {\n    return str.replace(/[&<>\"']/g, (s) => ({\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    }[s]));\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/hi.jpg\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Sarah Script</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img class=\\\"profile-img\\\" width=\\\"140\\\" height=\\\"140\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"hi\\\" title=\\\"hi\\\"/> <h1 class=\\\"ms-font-su profile-name\\\">Hi Sarah</h1> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <h2 class=\\\"ms-font-xl\\\"> Let's get your colour on! </h2> <div role=\\\"button\\\" id=\\\"run\\\" class=\\\"ms-welcome__action ms-Button ms-Button--hero ms-font-xl squircle\\\"> <span class=\\\"ms-Button-label\\\">GO</span> </div> <p><label id=\\\"item-subject\\\"></label></p> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","_invoke","configurable","writable","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","slice","constructor","name","from","_unsupportedIterableToArray","_n","F","s","next","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","run","_run","_callee2","outEl","escapeHtml","_t5","_context2","str","Word","_ref","_callee","context","body","text","citationRegex","matches","_i","_matches","mm","preDate","fullRanges","_iterator","_step","subRanges","_iterator2","_step2","sr","actsRegex","actsMatches","_i2","_actsMatches","am","_fullRanges","_iterator3","_step3","_r","_subRanges","_iterator4","_step4","_sr","_t","_t2","_t3","_t4","_context","load","sync","exec","push","fullMatch","claimant","trim","respondent","year","index","lastIndex","search","matchCase","matchWholeWord","items","font","italic","color","console","error","err","getElementById","textContent","innerHTML","map","x","concat","join","log","_x","message","Office","onReady","info","host","HostType","style","display","onclick","URL"],"sourceRoot":""}